@model mvc_task.Models.Employee

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (TempData["AlertMessage"] != null)
{
    <div class="d-flex justify-content-end">
        <div id="alertMessage" class="alert alert-success w-25">
            @TempData["AlertMessage"]
        </div>
    </div>
}

@using (Html.BeginForm("Login", "Authentication", FormMethod.Post))
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.FirstName)

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" , @type = "password"} })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    if (ViewBag.Message != null)
    {
        <p style="border: 1px solid red;">
            @ViewBag.Message
        </p>
    }
    <div class="form-group d-flex">
        <div class="col-md-offset-2">
            <input type="submit" value="Login" class="btn border-primary my-3 me-4" />
        </div>
        <div class="col-md-offset-2">
            @Html.ActionLink("Register", "Register", "Authentication", new { area = "" }, new { @class = "btn border-primary my-3" })
        </div>
    </div>
    <div>
        @Html.ActionLink("Forgot Password?", "ResetPass", "Authentication", new { area = "" }, new { @class = "my-3" })
    </div>
}