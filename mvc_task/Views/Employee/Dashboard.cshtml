@model IEnumerable<mvc_task.Models.Task>

@{
    ViewBag.Title = "Deshboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (TempData["AlertMessage"] != null)
{
    <div class="d-flex justify-content-end">
        <div id="alertMessage" class="alert alert-success w-25">
            @TempData["AlertMessage"]
        </div>
    </div>
    <script>
        function hideAlert() {
            $("#alertMessage").fadeOut("slow");
        }
        setTimeout(hideAlert, 1000);
    </script>

}

<div class="d-flex justify-content-end">
    @Html.ActionLink("Add Task", "AddTask", "Employee", new { area = "" }, new { @class = "btn border-primary" })
</div>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.TaskDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TaskName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TaskDescription)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ApprovedOrRejectedOn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedOn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ModifiedOn)
        </th>
        <th>Actions</th>
    </tr>

    @foreach (var item in Model)
    {
        if (item.EmployeeId == (int?)Session["EmpId"])
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TaskDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TaskName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TaskDescription)
                </td>
                <td>
                    @{
                        string textColor;
                        switch (item.Status)
                        {
                            case "Pending":
                                textColor = "#ff9966";
                                break;
                            case "Approved":
                                textColor = "green";
                                break;
                            default:
                                textColor = "red";
                                break;
                        }
                    }
                    <span style="color: @textColor;">
                        @Html.DisplayFor(modelItem => item.Status)
                    </span>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ApprovedOrRejectedOn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedOn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ModifiedOn)
                </td>
                <td>
                    @if(item.Status == "Pending")
                    {
                    @Html.ActionLink("Edit", "EditTask", new { id = item.TaskID , status = item.Status})
                    }
                    @Html.ActionLink("Delete", "DeleteTask", new { id = item.TaskID })
                </td>
            </tr>
        }
    }
</table>
