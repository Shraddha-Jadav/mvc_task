@model mvc_task.Models.EditUserViewModel


<form class="pt-3" method="post" id="formData" action="/Director/EditEmp">
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmpObj.EmployeeId)

        <div class="form-group">
            @Html.LabelFor(model => model.EmpObj.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmpObj.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmpObj.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmpObj.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmpObj.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmpObj.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmpObj.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmpObj.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmpObj.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmpObj.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmpObj.DOB, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.EmpObj.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmpObj.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 form-control w-25">
                Female:
                @Html.RadioButtonFor(model => model.EmpObj.Gender, "F")
                Male:
                @Html.RadioButtonFor(model => model.EmpObj.Gender, "M")

                @Html.ValidationMessageFor(model => model.EmpObj.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentNames, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @if (Model != null)
                {
                    @Html.DropDownListFor(x => x.EmpObj.DepartmentId, Model.DepartmentNames, new { @id = "ddlDepartment", @class = "form-control" })
                }
                else
                {
                    <p>No data available</p>
                }

                @Html.ValidationMessageFor(model => model.EmpObj.DepartmentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmployeeNames, "Reporting Person", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.EmpObj.DepartmentId == 3)
                {
                    @Html.DropDownListFor(x => x.EmpObj.ReportingPerson, new List<SelectListItem>(), new { @id = "ddlEmployeeName", @class = "form-control", @disabled = "true" })
                }
                else
                {
                    @Html.DropDownListFor(x => x.EmpObj.ReportingPerson, new List<SelectListItem>(), new { @id = "ddlEmployeeName", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EmpObj.ReportingPerson, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-success" />
            </div>
        </div>
    </div>
</form>