@model IEnumerable<mvc_task.Models.Task>

<table class="table" id="taskTable">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.TaskDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TaskName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TaskDescription)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ApprovedOrRejectedOn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedOn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ModifiedOn)
        </th>
        <th>
            @Html.DisplayName("Action")
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.TaskDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TaskName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TaskDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ApprovedOrRejectedOn)
            </td>
            <td>
                @{
                    string textColor;
                    switch (item.Status)
                    {
                        case "Pending":
                            textColor = "#ff9966";
                            break;
                        case "Approved":
                            textColor = "green";
                            break;
                        default:
                            textColor = "red";
                            break;
                    }
                }
                <span style="color: @textColor;">
                    @Html.DisplayFor(modelItem => item.Status)
                </span>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedOn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModifiedOn)
            </td>
            <td>
                <div class="d-flex">
                    <button class="btn border-success btn-success me-2 approveBtn" data-taskid="@item.TaskID" data-btn="approve">Approve</button>
                    <button class="btn border-success btn-success me-2 rejectBtn" data-taskid="@item.TaskID" data-btn="reject">Reject</button>
                </div>
            </td>
        </tr>
    }
</table>



