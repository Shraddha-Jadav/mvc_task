@model IEnumerable<mvc_task.Models.Task>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    int id = (int)Session["EmpId"];
}

<!--Alert Message-->
@if (TempData["AlertMessage"] != null)
{
    <div class="d-flex justify-content-end">
        <div id="alertMessage" class="alert alert-success w-25">
            @TempData["AlertMessage"]
        </div>
    </div>
    <script>
        function hideAlert() {
            $("#alertMessage").fadeOut("slow");
            @TempData.Remove("AlertMessage");
        }
        setTimeout(hideAlert, 1000);
    </script>

}

<div class="d-flex justify-content-between">
    <h2 class=" my-3">My Tasks</h2>
    <button type="button" data-id="0" class="btn btn-sm btn-success AddTask my-3">Add Task</button>
</div>


<table class="table w-100" id="taskTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayName("Task Name")
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TaskDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TaskDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ApprovedOrRejectedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifiedOn)
            </th>
            <th>
                @Html.DisplayName("Actions")
            </th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>


<div class="modal" tabindex="-1" id="myModal" data-bs-backdrop="static">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Task Log</h2>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body task-modal-body">

            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Load DataTables plugin -->
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            var token = getCookie("jwt");

            $("#taskTable").DataTable({
                "serverSide": true,
                "processing": true,
                "ajax": {
                    "url": "/Task/EmployeeTasks",
                    "type": "POST",
                    "datatype": "json"
                },

                "columns": [
                    { "data": "TaskName" },
                    { "data": "TaskDescription" },
                    { "data": "TaskDate" },
                    {
                        "data": null,
                        "render": function (data, type, row, meta) {
                            var color = row.Status == "Pending" ? "warning" : row.Status == "Approved" ? "success" : "danger";
                            return '<p class="rounded-pill btn-sm btn border-' + color + ' text-' + color + '">' + row.Status + '</p>'
                        }
                    },
                    { "data": "ApprovedOrRejectedOn" },
                    { "data": "CreatedOn" },
                    { "data": "ModifiedOn" },
                    {
                        "data": null,
                        "render": function (data, type, row, meta) {
                            return '<button type="button" data-id="' + row.TaskID + '" class="btn btn-sm btn-warning px-3 AddTask">Edit</button>&nbsp' +
                                '<a href="/Task/DeleteTask/' + row.TaskID + '" class="btn btn-danger btn-sm" onclick="return confirm(\'Are you sure you want to delete this task?\')">Delete</a>';
                        }
                    },
                ],

                "error": function (xhr, error, thrown) {
                    console.log("XHR Status:", xhr.status);
                    console.log("Error:", error);
                    console.log("Thrown:", thrown);
                }
            });

            function getCookie(name) {
                console.log(name)
                const value = `; ${document.cookie}`;
                const parts = value.split(`; ${name}=`);
                if (parts.length === 2) {
                    const token = parts.pop().split(';').shift();
                    console.log("Retrieved Token:", token);
                    return token;
                }
                console.log("Token not found in cookies.");
                return null;
            }
        });
    </script>

}